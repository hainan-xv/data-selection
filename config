# this file has location variables used throughout the system

# locations
#==============================================================================
working=/export/a11/hxu/automatic/working
ROOT=/export/a11/hxu/automatic/data-selection
#==============================================================================

# binaries
#==============================================================================
moses=/export/a11/hxu/mosesdecoder
tagger=/export/a11/hxu/automatic/data-selection/external
clust=/export/a11/hxu/tools/cluster-3.6.7/
srilm=/export/a11/hxu/tools/srilm/bin/i686-m64

num_gmms=1  # we might take several subsets of the data to train several GMMs
            # and average the scores TODO(hxu)

#==============================================================================
# corpus
# good corpus - to extract features and train a GMM;
# if it's a number then select a subset of that size from bad corpus

# bad corpus - the corpus which we try to select a good subset
#==============================================================================
input_lang=fr
output_lang=en
raw_stem_good=2000000

# if good corpus is a subset of bad corpus then in the first iteration we choose
# a random subset and later pick the top-scored ones from the previous iteration
num_iters=6
#clean_stem_good=

clean_stem_bad=/export/a11/hxu/automatic/working/7/step-1/bad.clean

output_percent=0.05 # as in number of lines
lang_pair=${input_lang}-${output_lang}

#==============================================================================
# exsiting translation model path
# if this is set, we will not process the *ref corpus
#==============================================================================
f2e=
e2f=

#==============================================================================
# features to use
#==============================================================================
ngram_feat=true
ngram_order=3
word_count=10000

bow_feat=true # probably the most important feature
bow_thresh=0.05 # only pick entries in lex table when prob >= thresh
                # 1 means pick most likely translation

pos_feat=true # need tagger
pos_num=5 # only pick top pos_num most common tags for each language
pos_ngram_feat=true
pos_sample=2000 
pos_jobs=80

length_feat=true
length_ratio=true

non_word_agree=true

ppl_feats=true  # log(ppl), TODO(hxu)

#==============================================================================
# GMM
#==============================================================================
num_gauss=8
gmm_sample_size=50000

#==============================================================================
# Below here is automatic scripts. Do not change anything
#==============================================================================
if [ "$e2f" != "" ] && [ "$f2e" != "" ]; then
  raw_stem_ref=
  clean_stem_ref=
else
  e2f=$working/$id/step-2/MT/iter-$iter/model/lex.1.e2f
  f2e=$working/$id/step-2/MT/iter-$iter/model/lex.1.f2e
fi

if ! [[ $raw_stem_good =~ ^[0-9]+$ ]]; then
  num_iters=1
fi
  
if [ "$num_gauss" == "" ]; then
  num_gauss=8
fi

set -e
